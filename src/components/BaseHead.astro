---
import "~/styles/globals.css";
import "@fontsource/lora";
import "@fontsource/lora/400-italic.css";
import "@fontsource/work-sans";
import "@fontsource/work-sans/500.css";
import "@fontsource/work-sans/600.css";
import "@fontsource/work-sans/700.css";

import loraWoff2 from "@fontsource/lora/files/lora-latin-400-normal.woff2?url";
import workSansWoff2 from "@fontsource/work-sans/files/work-sans-latin-400-normal.woff2?url";
import ClientRouter from "astro/components/ClientRouter.astro";
---

<!-- Global Metadata -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Favicons -->
<link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<meta name="apple-mobile-web-app-title" content="Leon Esquillon" />
<link rel="manifest" href="/site.webmanifest" />

<!-- Fonts -->
<link
  rel="preload"
  as="font"
  type="font/woff2"
  href={loraWoff2}
  crossorigin="anonymous"
/>
<link
  rel="preload"
  as="font"
  type="font/woff2"
  href={workSansWoff2}
  crossorigin="anonymous"
/>

<!-- Analytics -->
<script
  async
  type="text/partytown"
  is:inline
  data-astro-rerun
  src="/script.js"
  data-website-id="2ba84ebb-313c-4ee5-8b78-449c139df2c0"
  data-domains="leonesquillon.me,www.leonesquillon.me"></script>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList["add"]("dark");
  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }

  document.addEventListener("astro:after-swap", function () {
    if (localStorage.getItem("theme") === "dark")
      document.documentElement.classList.toggle("dark", true);
  });
</script>
<ClientRouter />
